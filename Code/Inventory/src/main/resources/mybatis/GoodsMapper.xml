<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liuxh.mapper.GoodsMapper">

    <!--<select id="getProduct" resultType="cn.liuxh.model.Goods">-->
        <!--select id,name,format,code,number,site,time from product LIMIT 1;-->
    <!--</select>-->

    <select id="getAll" resultType="cn.liuxh.model.Goods">
        select * from goods;
    </select>

    <select id="getAllE" resultType="cn.liuxh.model.Goods">
        select * from goods where groupId = #{groupId} limit #{start},#{rows};
    </select>

    <select id="getGoodsBySeriesNo" resultType="cn.liuxh.model.Goods">
        select * from goods where seriesNo=#{seriesNo} limit 1;
    </select>

    <select id="count" resultType="java.lang.Integer"  parameterType="int">
        select count(*) from goods where groupId = #{groupId}
    </select>

    <insert id="add" parameterType="cn.liuxh.model.Goods" useGeneratedKeys="true"
            keyProperty="id">
        insert into goods(seriesNo,size,name,count,locationNo,remarks1,remarks2,groupId)
        values(#{seriesNo},#{size},#{name},#{count},#{locationNo},#{remarks1},#{remarks2},#{groupId})
    </insert>

    <insert id="importGoods" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="id">
        insert into goods(seriesNo,size,name,count,locationNo,remarks1,remarks2,groupId)
        values
        <foreach collection="list" item="item" index="index" open="" close="" separator=",">
            (#{item.seriesNo},#{item.size},#{item.name},#{item.count},#{item.locationNo},#{item.remarks1},#{item.remarks2},#{item.groupId})
        </foreach>
        ON DUPLICATE KEY UPDATE size=VALUES(size),name=VALUES(name),count=VALUES(count),locationNo=VALUES(locationNo),remarks1=VALUES(remarks1),remarks2=VALUES(remarks2);
    </insert>
    <!--<if test="item.status != null and item.status != ''">-->
    <!-- 更新的配置 -->
    <update id="update" parameterType="cn.liuxh.model.Goods">
        update goods set
        seriesNo=#{seriesNo},size=#{size},name=#{name},count=#{count},locationNo=#{locationNo},remarks1=#{remarks1},remarks2=#{remarks2}
        where id=#{id}
    </update>

    <!-- 更新的配置 -->
    <update id="updateSkuLocation" parameterType="cn.liuxh.model.Goods">
        update goods set
        locationNo=#{locationNo}
        where seriesNo=#{seriesNo} AND groupId=#{groupId}
    </update>

    <!-- 删除配置 -->
    <delete id="delete" parameterType="int">
        delete from goods where id=#{id}
    </delete>

    <delete id="truncate" parameterType="int">
        DELETE from goods WHERE id != 0 AND groupId=#{groupId}
    </delete>

</mapper>